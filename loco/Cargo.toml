[workspace]
members = ["macros", "xtask", "loco-extras"]
exclude = ["starters"]

[workspace.package]
edition = "2021"
rust-version = "1.70"
license = "Apache-2.0"

[package]
name = "loco-rs"
version = "0.6.2"
description = "The one-person framework for Rust"
homepage = "https://loco.rs/"
documentation = "https://docs.rs/loco-rs"
authors = ["Dotan Nahum <dotan@rng0.io>", "Elad Kaplan <kaplan.elad@gmail.com>"]
repository = "https://github.com/loco-rs/loco"
license.workspace = true
edition.workspace = true
rust-version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["auth_jwt", "cli", "with-db", "cache_inmem"]
auth_jwt = ["dep:jsonwebtoken"]
cli = ["dep:clap"]
testing = ["dep:axum-test"]
with-db = ["dep:sqlx"]
channels = ["dep:socketioxide"]
# Storage features
all_storage = ["storage_aws_s3", "storage_azure", "storage_gcp"]
storage_aws_s3 = ["object_store/aws"]
storage_azure = ["object_store/azure"]
storage_gcp = ["object_store/gcp"]
# Cache feature
cache_inmem = ["dep:moka"]

[dependencies]

eyre = "0.6"
backtrace_printer = { version = "1.3.0" }

# cli
clap = { version = "4.4.7", features = ["derive"], optional = true }
colored = "2"

sqlx = { version = "0.7.4", default-features = false, features = [
  "postgres",
  "runtime-tokio-rustls",
  "macros",
  "uuid",
  "migrate",
], optional = true }

tokio = { version = "1.33.0", default-features = false }
# the rest

serde = "1"
serde_json = "1"
serde_yaml = "0.9"
serde_variant = "0.1.2"

# worker fwk
rusty-sidekiq = { version = "0.8.2", default-features = false }
async-trait = { workspace = true }
bb8 = "0.8.1"

axum = { workspace = true }
axum-extra = { version = "0.9", features = ["cookie"] }
regex = "1"
lazy_static = "1.4.0"
fs-err = "2.11.0"
# mailer
tera = "1.19.1"
lettre = { version = "0.11.4", default-features = false, features = [
  "builder",
  "hostname",
  "smtp-transport",
  "tokio1-rustls-tls",
] }
include_dir = "0.7.3"
thiserror = "1"
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.16", features = ["env-filter"] }


# cli/migrations
duct = "0.13.6"

tower-http = { workspace = true }
byte-unit = "4.0.19"

argon2 = { version = "0.5.2", features = ["std"] }
rand = { version = "0.8.5", features = ["std"] }
jsonwebtoken = { version = "9.1.0", optional = true }
bcrypt = { version = "0.15.0", optional = true }
validator = { version = "0.16.1", features = ["derive"] }
futures-util = "0.3"
tower = { workspace = true }
hyper = "1.1"
mime = "0.3"
bytes = "1.1"

axum-test = { version = "14.3.0", optional = true }

# gen
rrgen = "0.5.3"
chrono = "0.4.31"
cargo_metadata = "0.18.1"

cfg-if = "1"

uuid = { version = "1.6", features = ["v4"] }
requestty = "0.5.0"

# A socket.io server implementation
socketioxide = { version = "0.13.1", features = ["state"], optional = true }


# File Upload
object_store = { version = "0.10.2", default-features = false }

# cache
moka = { version = "0.12.7", features = ["sync"], optional = true }

[workspace.dependencies]
async-trait = { version = "0.1.74" }
axum = { version = "0.7.5", features = ["macros"] }
tower = "0.4"
tower-http = { version = "0.5.0", features = [
  "trace",
  "catch-panic",
  "timeout",
  "add-extension",
  "cors",
  "fs",
  "set-header",
  "compression-full",
] }

[package.metadata.docs.rs]
features = ["testing"]

[dev-dependencies]
loco-rs = { path = ".", features = ["testing"] }
rstest = "0.21.0"
insta = { version = "1.34.0", features = ["redactions", "yaml", "filters"] }
